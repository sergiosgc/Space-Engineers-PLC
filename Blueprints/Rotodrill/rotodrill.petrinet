{"version":"1.0","places":[{"name":"Retract: init","entryFunc":"","tickFunc":"","exitFunc":"","markings":["retract"],"x":700,"y":200},{"name":"Retract: Reset PVV fast","entryFunc":"(petriNet) => {\n petriNet.block<IMyProgrammableBlock>(\"Rotodrill PV Programmable Block\").Enabled = false;\n petriNet.blockMoveTo(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Vertical\"), 90f, 10f);\n}","tickFunc":"","exitFunc":"","markings":[],"x":500,"y":400},{"name":"Retract: Reset PVV slow","entryFunc":"(petriNet) =>  petriNet.blockMoveTo(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Vertical\"), 90f, 1f)","tickFunc":"","exitFunc":"","markings":[],"x":500,"y":600},{"name":"Retract: Reset PVV Done","entryFunc":"(petriNet) => {\n petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Vertical\").TargetVelocityRPM = 0;\n}","tickFunc":"","exitFunc":"","markings":[],"x":500,"y":800},{"name":"Retract: Reset PVH Fast","entryFunc":"(petriNet) => {\n petriNet.block<IMyProgrammableBlock>(\"Rotodrill PV Programmable Block\").Enabled = false;\n petriNet.blockMoveTo(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Horizontal\"), 0f, 10f, false);\n}","tickFunc":"","exitFunc":"","markings":[],"x":900,"y":400},{"name":"Retract: Reset PVH Slow","entryFunc":"(petriNet) =>  petriNet.blockMoveTo(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Horizontal\"), 0f, 1f, false)","tickFunc":"","exitFunc":"","markings":[],"x":900,"y":600},{"name":"Retract: Reset PVH Done","entryFunc":"(petriNet) => {\n petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Horizontal\").TargetVelocityRPM = 0;\n}","tickFunc":"","exitFunc":"","markings":[],"x":900,"y":800},{"name":"Done","entryFunc":"","tickFunc":"","exitFunc":"","markings":[],"x":700,"y":1000},{"name":"Retract: Reset Drills","entryFunc":"(petriNet) => {\n petriNet.blocks<IMyMotorStator>(\"Rotodrill Hinges\", (hinge) => petriNet.blockMoveTo(hinge, 0, 0.5f) );\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Drill Pistons\", (piston) => petriNet.blockMoveTo(piston, 0, 0.5f) );\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\", (piston) => petriNet.blockMoveTo(piston, 0, 0.5f) );\n}","tickFunc":"","exitFunc":"(petriNet) => {\n petriNet.blocks<IMyShipDrill>(\"Rotodrill Drills\", (drill) => drill.Enabled = false );\n petriNet.block<IMyMotorStator>(\"Rotodrill Drill Rotor\").TargetVelocityRPM = 0;\n}","markings":[],"x":1200,"y":400},{"name":"Retract: Drills Done","entryFunc":"","tickFunc":"","exitFunc":"","markings":[],"x":1200,"y":800},{"name":"Drill: Init","entryFunc":"","tickFunc":"","exitFunc":"","markings":["drill"],"x":1700,"y":200},{"name":"Drill: Retract Drills","entryFunc":"(petriNet) => {\n petriNet.block<IMyProgrammableBlock>(\"Rotodrill PV Programmable Block\").Enabled = true;\n petriNet.blocks<IMyShipDrill>(\"Rotodrill Drills\", (drill) => drill.Enabled = true );\n petriNet.blocks<IMyMotorStator>(\"Rotodrill Hinges\", (hinge) => petriNet.blockMoveTo(hinge, 0, 0.5f) );\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Drill Pistons\", (piston) => petriNet.blockMoveTo(piston, 0, 0.5f) );\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\", (piston) => petriNet.blockMoveTo(piston, 0, 0.5f) );\n petriNet.block<IMyMotorStator>(\"Rotodrill Drill Rotor\").TargetVelocityRPM = 0;\n}","tickFunc":"","exitFunc":"","markings":[],"x":1700,"y":400},{"name":"Drill: Extend","entryFunc":"(petriNet) => {\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\", (piston) => petriNet.blockMoveTo(piston, 10, 0.01f) );\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Drill Pistons\", (piston) => petriNet.blockMoveTo(piston, 10, 0.01f) );\n petriNet.block<IMyMotorStator>(\"Rotodrill Drill Rotor\").TargetVelocityRPM = 4;\n}","tickFunc":"","exitFunc":"","markings":["continue"],"x":1700,"y":600},{"name":"Drill: Retract","entryFunc":"(petriNet) => {\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\", (piston) => petriNet.blockMoveTo(piston, 0, 0.5f) );\n petriNet.blocks<IMyPistonBase>(\"Rotodrill Drill Pistons\", (piston) => petriNet.blockMoveTo(piston, 0, 0.6f) );\n}\n","tickFunc":"","exitFunc":"","markings":[],"x":1700,"y":800},{"name":"Drill: Widen Bore","entryFunc":"(petriNet) => {\n petriNet.floatStore.Add(\n   \"hingeTarget\", \n    petriNet.block<IMyMotorStator>(\"Rotodrill Hinge\").Angle * 180 / ((float)Math.PI));\n petriNet.floatStore[\"hingeTarget\"] = petriNet.floatStore[\"hingeTarget\"] - (petriNet.floatStore[\"hingeTarget\"] > -30 ? 15 : 5);\n if (petriNet.floatStore[\"hingeTarget\"] > 180) petriNet.floatStore[\"hingeTarget\"] = petriNet.floatStore[\"hingeTarget\"] - 360;\n if (petriNet.floatStore[\"hingeTarget\"] < -180) petriNet.floatStore[\"hingeTarget\"] = petriNet.floatStore[\"hingeTarget\"] + 360;\n petriNet.blocks<IMyMotorStator>(\"Rotodrill Hinges\", (hinge) => petriNet.blockMoveTo(hinge, petriNet.floatStore[\"hingeTarget\"], 0.5f) );\n}","tickFunc":"","exitFunc":"","markings":[],"x":1700,"y":1000}],"transitions":[{"enabledTest":"(petriNet) => petriNet.blockPositionIs(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Vertical\"), 90f, 10f)","timer":1,"updateFrequency":1,"x":470,"y":496,"inflows":["Retract: Reset PVV fast"],"outflows":["Retract: Reset PVV slow"]},{"enabledTest":"(petriNet) => petriNet.blockPositionIs(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Vertical\"), 90f, 1f)","timer":1,"updateFrequency":100,"x":470,"y":696,"inflows":["Retract: Reset PVV slow"],"outflows":["Retract: Reset PVV Done"]},{"enabledTest":"","timer":1,"updateFrequency":1,"x":670,"y":896,"inflows":["Retract: Reset PVH Done","Retract: Reset PVV Done","Retract: Drills Done"],"outflows":["Done"]},{"enabledTest":"(petriNet) => petriNet.blockPositionIs(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Horizontal\"), 0f, 30f)","timer":1,"updateFrequency":100,"x":870,"y":496,"inflows":["Retract: Reset PVH Fast"],"outflows":["Retract: Reset PVH Slow"]},{"enabledTest":"(petriNet) => petriNet.blockPositionIs(petriNet.block<IMyMotorStator>(\"Rotodrill PV Rotor Horizontal\"), 0f, 1f)","timer":1,"updateFrequency":100,"x":870,"y":696,"inflows":["Retract: Reset PVH Slow"],"outflows":["Retract: Reset PVH Done"]},{"enabledTest":"","timer":1,"updateFrequency":1,"x":670,"y":296,"inflows":["Retract: init"],"outflows":["Retract: Reset PVV fast","Retract: Reset PVH Fast","Retract: Reset Drills"]},{"enabledTest":"(petriNet) => \n petriNet.blocksAreAt(petriNet.blocks<IMyMotorStator>(\"Rotodrill Hinges\"), 0, 1f) &&\n petriNet.blocksAreAt(petriNet.blocks<IMyPistonBase>(\"Rotodrill Drill Pistons\"), 0, 0.1f) &&\n petriNet.blocksAreAt(petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\"), 0, 0.1f) \n","timer":1,"updateFrequency":10,"x":1170,"y":596,"inflows":["Retract: Reset Drills"],"outflows":["Retract: Drills Done"]},{"enabledTest":"","timer":1,"updateFrequency":1,"x":1670,"y":296,"inflows":["Drill: Init"],"outflows":["Drill: Retract Drills"]},{"enabledTest":"(petriNet) => \n petriNet.blocksAreAt(petriNet.blocks<IMyMotorStator>(\"Rotodrill Hinges\"), 0, 0.1f) &&\n petriNet.blocksAreAt(petriNet.blocks<IMyPistonBase>(\"Rotodrill Drill Pistons\"), 0, 0.1f) &&\n petriNet.blocksAreAt(petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\"), 0, 0.1f) \n","timer":1,"updateFrequency":10,"x":1670,"y":496,"inflows":["Drill: Retract Drills"],"outflows":["Drill: Extend"]},{"enabledTest":"(petriNet) => \n petriNet.blocksAreAt(petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\"), 10, 0.1f)\n","timer":1,"updateFrequency":100,"x":1670,"y":696,"inflows":["Drill: Extend"],"outflows":["Drill: Retract"]},{"enabledTest":"(petriNet) => \n petriNet.blocksAreAt(petriNet.blocks<IMyPistonBase>(\"Rotodrill Main Pistons\"), 0, 0.1f) \n","timer":1,"updateFrequency":100,"x":1670,"y":896,"inflows":["Drill: Retract"],"outflows":["Drill: Widen Bore"]},{"enabledTest":"(petriNet) => \n petriNet.blocksAreAt(petriNet.blocks<IMyMotorStator>(\"Rotodrill Hinges\"), petriNet.floatStore[\"hingeTarget\"], 0.1f) ","timer":1,"updateFrequency":100,"x":1470,"y":796,"inflows":["Drill: Widen Bore"],"outflows":["Drill: Extend"]}]}